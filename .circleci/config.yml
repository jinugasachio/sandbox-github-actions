version: 2.1

executors:
  terraform:
    resource_class: small
    shell: /bin/bash -euo pipefail
    working_directory: /terraform-workspace-type
    docker:
      - image: jinugasachio/circleci-alpine:3.15.0

commands:
  export_aws_credentials:
    steps:
      - run:
          name: Export AWS credentials
          command: ./scripts/circleci/export_credentials.sh
  run_terraform_init:
    steps:
      - run:
          name: Run terraform init
          command: |
            changed_dirs=$(./scripts/circleci/detect_changed_dirs.sh)
            ./scripts/circleci/terraform_init.sh $changed_dirs
  run_terraform_validate:
    steps:
      - run:
          name: Run terraform validate
          command: |
            changed_dirs=$(./scripts/circleci/detect_changed_dirs.sh)
            ./scripts/circleci/terraform_validate.sh $changed_dirs
  run_terraform_plan:
    steps:
      - run:
          name: Run terraform plan
          command: |
            changed_dirs=$(./scripts/circleci/detect_changed_dirs.sh)
            ./scripts/circleci/terraform_plan.sh $changed_dirs
            github-comment hide --config ./github-comment.yaml --hide-key default
  run_terraform_apply:
    steps:
      - run:
          name: Run terraform apply
          command: |
            changed_dirs=$(./scripts/circleci/detect_changed_dirs.sh)
            ./scripts/circleci/terraform_apply.sh $changed_dirs
  setup_dependencies:
    steps:
      - restore_cache:
          keys:
            - v2-aqua-tools-{{ checksum "aqua.yaml" }}
            - v2-aqua-tools- # 部分キャッシュリストア。任意のブランチから使用される、最も新しく生成されたキャッシュをキャッシュストアから検索
      - run:
          name: Install aqua
          command: ./scripts/circleci/install_aqua.sh
      - run:
          command: |
              echo 'export PATH="${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin:$PATH"' >> $BASH_ENV
      - run:
          command: aqua -c aqua.yaml i
      - run: tfenv install
      - save_cache:
          key: v2-aqua-tools--{{ checksum "aqua.yaml" }}
          paths:
              - /.local/share/aquaproj-aqua # aqua iではこの配下にインストールするのでパスはこれで良い

jobs:
  security_check:
    executor: terraform
    steps:
      - checkout
      - setup_dependencies
      - run:
          name: Run tfsec
          command: |
            export REVIEWDOG_GITHUB_API_TOKEN=$GITHUB_TOKEN
            reviewdog -conf=$CIRCLE_WORKING_DIRECTORY/.reviewdog.yaml -runners=tfsec -reporter=github-pr-review -fail-on-error=true

  assume_role:
    executor: terraform
    steps:
      - checkout
      - run: 
          name: Assume role
          command: ./scripts/circleci/assume_role.sh
      - persist_to_workspace: # GAと違いCircleCIでは動的なmatrix buildができなそうなのでworkspace使う必要は本当はない
          root: /tmp
          paths:
            - aws_sts_credentials.json

  terraform_fmt:
    executor: terraform
    steps:
      - checkout
      - setup_dependencies
      - run:
          name: Run terraform fmt
          command: terraform fmt -diff -check -recursive .

  lint:
    executor: terraform
    steps:
      - checkout
      - setup_dependencies
      - attach_workspace:
          at: /tmp
      - export_aws_credentials

      - run:
          name: Run tflint init
          command: tflint --init --config ./.tflint.hcl
      - run:
          name: Run tflint
          command: |
            changed_dirs=$(./scripts/circleci/detect_changed_dirs.sh)
            ./scripts/circleci/tflint.sh $changed_dirs

  terraform_plan:
    executor: terraform
    steps:
      - checkout
      - setup_dependencies
      - attach_workspace:
          at: /tmp
      - export_aws_credentials
      - run_terraform_init
      - run_terraform_validate
      - run_terraform_plan
  
  terraform_apply:
    executor: terraform
    steps:
      - checkout
      - setup_dependencies
      - attach_workspace:
          at: /tmp
      - export_aws_credentials
      - run_terraform_init
      - run_terraform_validate
      - run_terraform_apply
      # - run_terraform_plan # apply後に差分がないことを確認したいのだが、labelが上書きされるのが気に食わないので一旦保留
      - run:
          name: Merge PR
          command: ./scripts/circleci/merge_pr.sh
  
workflows:
  version: 2
  terraform_workflow:
    jobs:
      - security_check
      - terraform_fmt
      - assume_role
      - lint:
          requires:
            - assume_role
      - terraform_plan:
          requires:
            - lint
      - approve:
          type: approval
          requires:
            - security_check
            - terraform_fmt
            - lint
            - terraform_plan
          filters:
            branches:
              ignore: main
      - terraform_apply:
          requires:
            - approve
